name: PeakActivityMain Comprehensive Test Suite

on:
  workflow_dispatch:  # Allow manual triggering
    inputs:
      test_type:
        description: 'Type of tests to run'
        required: true
        default: 'all'
        type: choice
        options:
        - all
        - python-unit
        - python-integration
        - functions-unit
        - webui-unit
        - webui-e2e
  release:
    types: [published, prereleased]
  schedule:
    # Run comprehensive tests weekly on Sundays at 3 AM UTC
    - cron: '0 3 * * 0'

jobs:
  comprehensive-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        echo "$HOME/.local/bin" >> $GITHUB_PATH
        poetry config virtualenvs.in-project true
        poetry config virtualenvs.create true

    - name: Install Python Dependencies (aw-server)
      run: poetry install
      working-directory: aw-server

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install Node.js Dependencies (functions)
      run: npm install
      working-directory: functions

    - name: Install Node.js Dependencies (aw-webui)
      run: npm install
      working-directory: aw-server/aw-webui

    - name: Set environment variables
      run: |
        # Add any necessary environment variables for your tests here
        echo "FIRESTORE_EMULATOR_HOST=localhost:8080" >> $GITHUB_ENV
        # Example for Firebase project ID (if needed for tests)
        # echo "FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}" >> $GITHUB_ENV

    - name: Run Comprehensive Test Suite
      run: |
        TEST_TYPE="${{ github.event.inputs.test_type || 'all' }}"
        
        echo "🧪 Running comprehensive test suite (type: $TEST_TYPE)"
        
        case $TEST_TYPE in
          "python-unit")
            poetry run pytest aw_server/tests/unit/ -v --tb=short --cov=aw_server --cov-report=xml
            ;;
          "python-integration")
            poetry run pytest aw_server/tests/integration/ -v --tb=short --cov=aw_server --cov-report=xml
            ;;
          "functions-unit")
            npm test --prefix functions
            ;;
          "webui-unit")
            npm test --prefix aw-server/aw-webui
            ;;
          "webui-e2e")
            npm run test:e2e --prefix aw-server/aw-webui
            ;;
          "all"|*)
            echo "Running all tests..."
            # Run Python Backend Tests
            poetry run pytest aw-server/tests/ -v --tb=short --cov=aw_server --cov-report=xml
            
            # Run Firebase Functions Tests
            npm test --prefix functions
            
            # Run Web UI Tests
            npm test --prefix aw-server/aw-webui
            
            # Run Web UI E2E Tests (if available and desired for comprehensive suite)
            npm run test:e2e --prefix aw-server/aw-webui || true # Allow E2E to fail without stopping workflow
            ;;
        esac
      working-directory: ${{ github.workspace }}

    - name: Generate Comprehensive Test Report
      if: always()
      run: |
        echo "# 📋 PeakActivityMain Comprehensive Test Report" > comprehensive_report.md
        echo "" >> comprehensive_report.md
        echo "**Python Version:** ${{ matrix.python-version }}" >> comprehensive_report.md
        echo "**Test Type:** ${{ github.event.inputs.test_type || 'all' }}" >> comprehensive_report.md
        echo "**Trigger:** ${{ github.event_name }}" >> comprehensive_report.md
        echo "**Date:** $(date -u)" >> comprehensive_report.md
        echo "" >> comprehensive_report.md
        
        echo "## 🧪 Test Categories Covered:" >> comprehensive_report.md
        echo "" >> comprehensive_report.md
        echo "### Python Backend Tests:" >> comprehensive_report.md
        echo "- ✅ Unit Tests" >> comprehensive_report.md
        echo "- ✅ Integration Tests" >> comprehensive_report.md
        echo "" >> comprehensive_report.md
        
        echo "### Firebase Functions Tests:" >> comprehensive_report.md
        echo "- ✅ Unit Tests" >> comprehensive_report.md
        echo "" >> comprehensive_report.md
        
        echo "### Web UI Tests:" >> comprehensive_report.md
        echo "- ✅ Unit Tests" >> comprehensive_report.md
        echo "- ✅ E2E Tests (if run)" >> comprehensive_report.md
        echo "" >> comprehensive_report.md

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: aw-server/coverage.xml # Adjust path if other coverage files are generated
        flags: comprehensive-tests
        name: comprehensive-tests-coverage
        fail_ci_if_error: false
        verbose: true

    - name: Upload Comprehensive Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: comprehensive-test-results-${{ matrix.python-version }}
        path: |
          comprehensive_report.md
          aw-server/htmlcov/ # Adjust path if other htmlcov dirs exist
          aw-server/coverage.xml # Adjust path if other coverage files exist
          aw-server/.coverage # Adjust path if other coverage files exist
        retention-days: 30

  test-matrix-summary:
    runs-on: ubuntu-latest
    needs: comprehensive-test
    if: always()
    
    steps:
    - name: Generate Matrix Summary
      run: |
        echo "# 🎯 PeakActivityMain Test Matrix Summary" > matrix_summary.md
        echo "" >> matrix_summary.md
        echo "## Test Results by Component:" >> matrix_summary.md
        echo "- Python Backend: ${{ needs.comprehensive-test.result }}" >> matrix_summary.md  
        echo "- Firebase Functions: ${{ needs.comprehensive-test.result }}" >> matrix_summary.md
        echo "- Web UI: ${{ needs.comprehensive-test.result }}" >> matrix_summary.md
        echo "" >> matrix_summary.md
        echo "## Overall Status:" >> matrix_summary.md
        if [ "${{ needs.comprehensive-test.result }}" == "success" ]; then
          echo "✅ **All comprehensive tests passed!**" >> matrix_summary.md
        else
          echo "❌ **Some comprehensive tests failed. Check individual job logs for details.**" >> matrix_summary.md
        fi
        
    - name: Upload Matrix Summary
      uses: actions/upload-artifact@v4
      with:
        name: test-matrix-summary
        path: matrix_summary.md
        retention-days: 30 